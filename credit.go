package main

//
// a MR application you need to develop
// go build -buildmode=plugin credit.go
//

import (
	"cs350/mr"
	"strconv"
	"strings"
)

// The map function is called once for each file of input. The first
// argument is the name of the input file, and the second is the
// file's complete contents. You should ignore the input file name,
// and look only at the contents argument. The return value is a slice
// of key/value pairs.
func Map(filename string, contents string) []mr.KeyValue {
	// your inplementation here
	//trim the contents and looks for 2023 credit scores above 400. If they are, return a key value pair with the key being the company and the value being 1,
	// if not, return a key value pair with the key being the company and the value being 0
	lines := strings.Split(contents, "\n")
	kva := []mr.KeyValue{}
	parts := []string{}
	for _, line := range lines {
		parts = strings.Split(line, ",")

		if len(parts) >= 4 {
			year := strings.TrimSpace(parts[2])
			score, _ := strconv.Atoi(strings.TrimSpace(parts[3]))
			//fmt.Println(year, score, parts[1])
			agency := strings.TrimSpace(parts[1])
			if year == "2023" && score > 400 {
				kv := mr.KeyValue{agency, "1"}
				kva = append(kva, kv)
			}
		}
	}
	return kva
}

// The reduce function is called once for each key generated by the
// map tasks, with a list of all the values created for that key by
// any map task.
func Reduce(key string, values []string) string {
	// your inplementation here
	return strconv.Itoa(len(values))
}
